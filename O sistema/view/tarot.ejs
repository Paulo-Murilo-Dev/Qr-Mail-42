<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Recado das Cartas • QR Mail 42</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Cinzel+Decorative:wght@400;700&family=Montserrat:wght@300;400;500;600&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
  <style>
    :root {
      --roxo-profundo: #0d021a;
      --roxo-escuro: #1a052a;
      --roxo-medio: #3a1a6a;
      --roxo-claro: #6a3a9a;
      --roxo-neon: #9d4edd;
      --dourado: #f5c542;
      --dourado-claro: #f8d373;
      --dourado-escuro: #d4a732;
      --texto: #f0e6ff;
      --texto-claro: #ffffff;
      --sombra: rgba(0, 0, 0, 0.5);
      --sombra-dourada: rgba(245, 197, 66, 0.3);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Montserrat', sans-serif;
      background-color: var(--roxo-profundo);
      color: var(--texto);
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 20px;
      line-height: 1.6;
      position: relative;
      overflow-x: hidden;
    }

    /* Fundo estrelado */
    .estrelas {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      overflow: hidden;
    }

    .estrela {
      position: absolute;
      background-color: white;
      border-radius: 50%;
      animation: twinkle var(--duration) infinite ease-in-out;
      opacity: var(--opacity);
      transition: opacity 0.5s ease, transform 0.5s ease;
    }

    @keyframes twinkle {
      0%, 100% { opacity: var(--opacity); }
      50% { opacity: calc(var(--opacity) * 0.5); }
    }

    .container {
      width: 100%;
      max-width: 650px;
      background: rgba(26, 5, 42, 0.85);
      backdrop-filter: blur(12px);
      border-radius: 20px;
      padding: 30px;
      box-shadow: 0 15px 40px var(--sombra),
                  0 0 0 1px rgba(106, 58, 154, 0.3),
                  0 0 30px rgba(157, 78, 221, 0.2);
      animation: fadeIn 0.8s ease-out;
      position: relative;
      overflow: hidden;
      border: 1px solid var(--roxo-claro);
    }

    h1 {
      font-family: 'Cinzel Decorative', serif;
      font-size: 2.2rem;
      margin-bottom: 30px;
      color: var(--dourado);
      text-align: center;
      position: relative;
      padding-bottom: 15px;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
      letter-spacing: 1px;
    }

    h1::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      width: 420px;
      height: 3px;
      background: linear-gradient(90deg, transparent, var(--dourado), transparent);
    }

    /* Contador de caracteres */
    .contador-caracteres {
      text-align: right;
      font-size: 0.85rem;
      margin-top: 5px;
      color: var(--roxo-claro);
    }

    .contador-caracteres.alerta {
      color: var(--dourado);
    }

    /* Estilos para markdown */
    .resposta-mistica h1, 
    .resposta-mistica h2, 
    .resposta-mistica h3 {
      font-family: 'Cinzel Decorative', serif;
      color: var(--dourado);
      margin: 20px 0 15px;
    }

    .resposta-mistica h1 {
      font-size: 1.8rem;
      border-bottom: 1px solid var(--roxo-claro);
      padding-bottom: 8px;
    }

    .resposta-mistica h2 {
      font-size: 1.5rem;
    }

    .resposta-mistica h3 {
      font-size: 1.3rem;
    }

    .resposta-mistica strong {
      color: var(--dourado);
      font-weight: 600;
      text-shadow: 0 0 5px rgba(245, 197, 66, 0.3);
    }

    .resposta-mistica em {
      font-style: italic;
      color: var(--texto-claro);
    }

    .resposta-mistica ul, 
    .resposta-mistica ol {
      padding-left: 25px;
      margin: 15px 0;
    }

    .resposta-mistica li {
      margin-bottom: 8px;
    }

    .resposta-mistica blockquote {
      border-left: 3px solid var(--dourado);
      padding-left: 15px;
      margin: 15px 0;
      color: var(--dourado-claro);
      font-style: italic;
    }

    .resposta-mistica code {
      background: rgba(58, 26, 106, 0.5);
      padding: 2px 5px;
      border-radius: 4px;
      font-family: monospace;
    }

    .resposta-mistica pre {
      background: rgba(26, 5, 42, 0.8);
      padding: 15px;
      border-radius: 8px;
      overflow-x: auto;
      margin: 15px 0;
      border: 1px solid var(--roxo-medio);
    }

    .resposta-mistica a {
      color: var(--dourado);
      text-decoration: none;
      border-bottom: 1px dashed var(--dourado);
      transition: all 0.3s;
    }

    .resposta-mistica a:hover {
      color: var(--dourado-claro);
      border-bottom: 1px solid var(--dourado-claro);
    }

    /* Efeito de digitação ChatGPT */
    .resposta-mistica p, 
    .resposta-mistica ul, 
    .resposta-mistica ol, 
    .resposta-mistica blockquote,
    .resposta-mistica h1,
    .resposta-mistica h2,
    .resposta-mistica h3 {
      opacity: 0;
      animation: fadeInUp 0.5s ease-out forwards;
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Sequência de animação para os elementos */
    .resposta-mistica p:nth-child(1) { animation-delay: 0.1s; }
    .resposta-mistica p:nth-child(2) { animation-delay: 0.3s; }
    .resposta-mistica p:nth-child(3) { animation-delay: 0.5s; }
    .resposta-mistica ul, 
    .resposta-mistica ol { animation-delay: 0.7s; }
    .resposta-mistica blockquote { animation-delay: 0.9s; }
    .resposta-mistica h1 { animation-delay: 0.2s; }
    .resposta-mistica h2 { animation-delay: 0.4s; }
    .resposta-mistica h3 { animation-delay: 0.6s; }

    .bloco {
      margin-bottom: 25px;
      animation: slideUp 0.5s ease-out;
    }

    .bloco label {
      display: block;
      margin-bottom: 8px;
      font-weight: 500;
      color: var(--dourado-claro);
      font-size: 1.05rem;
    }

    .radio-group {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      margin-top: 10px;
    }

    .radio-option {
      position: relative;
      flex: 1 1 calc(50% - 15px);
      min-width: 120px;
    }

    .radio-option input {
      position: absolute;
      opacity: 0;
    }

    .radio-option label {
      display: flex;
      align-items: center;
      gap: 10px;
      font-size: 1rem;
      cursor: pointer;
      transition: all 0.3s;
      padding: 12px 15px;
      background: rgba(58, 26, 106, 0.3);
      border-radius: 8px;
      border: 1px solid rgba(106, 58, 154, 0.5);
      width: 100%;
      margin: 0;
      font-weight: 400;
      color: var(--texto);
    }

    .radio-option label:hover {
      background: rgba(106, 58, 154, 0.3);
      border-color: var(--dourado);
    }

    .radio-option input:checked + label {
      background: rgba(245, 197, 66, 0.1);
      border-color: var(--dourado);
      color: var(--dourado-claro);
      box-shadow: 0 0 0 1px var(--dourado);
    }

    .radio-option input:focus + label {
      box-shadow: 0 0 0 2px var(--dourado);
    }

    .radio-custom {
      width: 18px;
      height: 18px;
      border: 2px solid var(--roxo-claro);
      border-radius: 50%;
      transition: all 0.3s;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .radio-option input:checked + label .radio-custom {
      background: var(--dourado);
      border-color: var(--dourado);
      box-shadow: 0 0 0 2px var(--roxo-escuro), 0 0 0 3px var(--dourado);
    }

    .radio-option input:checked + label .radio-custom::after {
      content: "";
      width: 6px;
      height: 6px;
      background: var(--roxo-escuro);
      border-radius: 50%;
    }

    select,
    textarea {
      width: 100%;
      padding: 14px;
      border-radius: 10px;
      background: rgba(58, 26, 106, 0.4);
      color: var(--texto-claro);
      border: 1px solid var(--roxo-claro);
      margin-top: 8px;
      font-size: 1rem;
      transition: all 0.3s;
      font-family: 'Montserrat', sans-serif;
    }

    select {
      appearance: none;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23f5c542' viewBox='0 0 16 16'%3E%3Cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3E%3C/svg%3E");
      background-repeat: no-repeat;
      background-position: right 14px center;
      background-size: 12px;
    }

    select:focus,
    textarea:focus {
      outline: none;
      border-color: var(--dourado);
      box-shadow: 0 0 0 2px rgba(245, 197, 66, 0.3);
      background: rgba(58, 26, 106, 0.6);
    }

    textarea {
      min-height: 120px;
      resize: vertical;
      line-height: 1.6;
    }

    textarea::placeholder {
      color: rgba(240, 230, 255, 0.5);
    }

    button {
      width: 100%;
      padding: 16px;
      background: linear-gradient(135deg, var(--dourado) 0%, var(--dourado-escuro) 100%);
      border: none;
      color: #2a0a50;
      font-weight: 600;
      border-radius: 12px;
      cursor: pointer;
      font-size: 1.1rem;
      margin-top: 15px;
      transition: all 0.3s;
      box-shadow: 0 4px 15px var(--sombra-dourada),
                  0 2px 4px rgba(0, 0, 0, 0.2),
                  inset 0 1px 0 rgba(255, 255, 255, 0.2);
      text-transform: uppercase;
      letter-spacing: 0.5px;
      font-family: 'Cinzel Decorative', serif;
      position: relative;
      overflow: hidden;
    }

    button::before {
      content: "";
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: all 0.5s;
    }

    button:hover {
      transform: translateY(-3px);
      box-shadow: 0 6px 25px var(--sombra-dourada),
                  0 3px 6px rgba(0, 0, 0, 0.2),
                  inset 0 1px 0 rgba(255, 255, 255, 0.2);
    }

    button:hover::before {
      left: 100%;
    }

    button:active {
      transform: translateY(1px);
      box-shadow: 0 2px 10px var(--sombra-dourada),
                  inset 0 1px 0 rgba(255, 255, 255, 0.1);
    }

    #carregando {
      margin-top: 30px;
      text-align: center;
      font-size: 1.1rem;
      color: var(--dourado);
      display: none;
      position: relative;
      padding: 20px;
      background: rgba(58, 26, 106, 0.3);
      border-radius: 10px;
      border: 1px dashed var(--roxo-claro);
    }

    #carregando::after {
      content: "✦";
      position: absolute;
      animation: pulse 2s infinite;
      color: var(--dourado);
    }

    .resultado {
      margin-top: 30px;
      background: rgba(58, 26, 106, 0.3);
      padding: 25px;
      border-radius: 15px;
      border-left: 4px solid var(--dourado);
      position: relative;
      box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.2);
      overflow: hidden;
    }

    .resultado::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 1px;
      background: linear-gradient(90deg, transparent, var(--dourado), transparent);
    }

    .resposta-mistica {
      white-space: pre-wrap;
      word-break: break-word;
      overflow-wrap: break-word;
      overflow-x: auto;
      font-size: 1.05rem;
      line-height: 1.7;
    }

    /* Efeito de brilho nas estrelas - agora mais suave */
    .brilho-estrelas .estrela {
      animation: brilho 2s cubic-bezier(0.4, 0, 0.2, 0.6) forwards, twinkle var(--duration) infinite ease-in-out;
    }

    @keyframes brilho {
      0% { 
        transform: scale(1); 
        opacity: var(--opacity);
      }
      20% { 
        transform: scale(3); 
        opacity: 1;
      }
      80% { 
        transform: scale(3); 
        opacity: 1;
      }
      100% { 
        transform: scale(1); 
        opacity: var(--opacity);
      }
    }

    /* Animações */
    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    @keyframes slideUp {
      from { 
        opacity: 0;
        transform: translateY(20px);
      }
      to { 
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes pulse {
      0% { opacity: 0.3; transform: scale(0.8); }
      50% { opacity: 1; transform: scale(1.2); }
      100% { opacity: 0.3; transform: scale(0.8); }
    }

    /* Responsividade */
    @media (max-width: 768px) {
      .container {
        padding: 25px;
      }
      
      h1 {
        font-size: 1.8rem;
      }
      
      h1::after {
        width: 300px;
      }
      
      .radio-option {
        flex: 1 1 100%;
      }
      
      .resposta-mistica h1 {
        font-size: 1.5rem;
      }
      
      .resposta-mistica h2 {
        font-size: 1.3rem;
      }
    }

    @media (max-width: 480px) {
      .container {
        padding: 20px;
        border-radius: 15px;
      }

      h1 {
        font-size: 1.6rem;
        padding-bottom: 10px;
      }
      
      h1::after {
        width: 200px;
      }

      select,
      textarea,
      button {
        padding: 12px;
      }
      
      .radio-option label {
        padding: 10px 12px;
      }
      
      .resposta-mistica h1 {
        font-size: 1.3rem;
      }
    }
  </style>
</head>
<body>
  <div class="estrelas" id="estrelas"></div>
  
  <div class="container">
    <h1>✦ Recado das Cartas ✦</h1>

    <% if (!promptSomente) { %>
      <div id="formulario">
        <div class="bloco">
          <label>Escolha o baralho:</label>
          <div class="radio-group">
            <div class="radio-option">
              <input type="radio" name="baralho" value="Tarô" id="tarot" checked>
              <label for="tarot">
                <span class="radio-custom"></span>
                <span>Tarô</span>
              </label>
            </div>
            <div class="radio-option">
              <input type="radio" name="baralho" value="Cigano" id="cigano">
              <label for="cigano">
                <span class="radio-custom"></span>
                <span>Cigano</span>
              </label>
            </div>
          </div>
        </div>

        <div class="bloco">
          <label for="tipoLeitura">Tipo de leitura:</label>
          <select id="tipoLeitura">
            <option value="1">1 carta - Visão Geral</option>
            <option value="3">3 cartas - Passado, Presente, Futuro</option>
            <option value="9">9 cartas - Círculo de Sabedoria</option>
            <option value="cruz">Cruz Celta - Análise Profunda</option>
          </select>
        </div>

        <div class="bloco">
          <label>Objetivo da consulta:</label>
          <div class="radio-group">
            <div class="radio-option">
              <input type="radio" name="objetivo" value="simnao" id="simnao" checked>
              <label for="simnao">
                <span class="radio-custom"></span>
                <span>Sim ou Não</span>
              </label>
            </div>
            <div class="radio-option">
              <input type="radio" name="objetivo" value="conselho" id="conselho">
              <label for="conselho">
                <span class="radio-custom"></span>
                <span>Conselho Espiritual</span>
              </label>
            </div>
          </div>
        </div>

        <div class="bloco">
          <label for="pergunta">Sua pergunta:</label>
          <textarea id="pergunta" maxlength="255" placeholder="Escreva sua pergunta para o universo... (máx. 255 caracteres)"></textarea>
          <div class="contador-caracteres" id="contador">255 caracteres restantes</div>
        </div>

        <button id="botaoGerar" onclick="gerarPrompt()">
          <span>Revelar Resposta</span>
        </button>
      </div>

      <div id="carregando" style="display: none;">
        🔮 Consultando os astros... aguarde... 🔮
      </div>
    <% } %>

    <% if (promptSalvo) { %>
      <div class="resultado">
        <div class="resposta-mistica" id="respostaMarkdown"></div>
      </div>
      
      <script>
        // Converter markdown para HTML quando a página carrega
        document.addEventListener('DOMContentLoaded', function() {
          const respostaMarkdown = `<%= promptSalvo %>`;
          const respostaHTML = marked.parse(respostaMarkdown);
          const container = document.getElementById('respostaMarkdown');
          
          // Efeito de digitação
          container.innerHTML = respostaHTML;
          
          // Mostrar container com fade in
          container.style.animation = 'fadeIn 0.8s ease-out forwards';
          
          // Ativar brilho nas estrelas por 2 segundos
          brilharEstrelas();
        });
      </script>
    <% } %>
  </div>

  <script>
    // Configuração do Marked (Markdown parser)
    marked.setOptions({
      breaks: true,
      gfm: true,
      highlight: function(code, lang) {
        return code;
      }
    });

    // Criar estrelas no fundo
    function criarEstrelas() {
      const estrelas = document.getElementById('estrelas');
      const count = 150;
      const width = window.innerWidth;
      const height = window.innerHeight;
      
      for (let i = 0; i < count; i++) {
        const estrela = document.createElement('div');
        estrela.className = 'estrela';
        
        // Tamanho aleatório entre 1 e 3px
        const size = Math.random() * 2 + 1;
        estrela.style.width = `${size}px`;
        estrela.style.height = `${size}px`;
        
        // Posição aleatória
        estrela.style.left = `${Math.random() * width}px`;
        estrela.style.top = `${Math.random() * height}px`;
        
        // Opacidade aleatória
        const opacity = Math.random() * 0.8 + 0.2;
        estrela.style.setProperty('--opacity', opacity);
        
        // Duração da animação aleatória
        const duration = `${Math.random() * 5 + 3}s`;
        estrela.style.setProperty('--duration', duration);
        
        estrelas.appendChild(estrela);
      }
    }

    // Efeito de brilho nas estrelas - agora mais suave
    function brilharEstrelas() {
      const estrelas = document.getElementById('estrelas');
      estrelas.classList.add('brilho-estrelas');
      
      setTimeout(() => {
        estrelas.classList.remove('brilho-estrelas');
      }, 2500); // 2.5 segundos
    }

    // Contador de caracteres
    function atualizarContador() {
      const textarea = document.getElementById('pergunta');
      const contador = document.getElementById('contador');
      const maxLength = 255;
      const remaining = maxLength - textarea.value.length;
      
      contador.textContent = `${remaining} caracteres restantes`;
      
      if (remaining < 30) {
        contador.classList.add('alerta');
      } else {
        contador.classList.remove('alerta');
      }
    }

    // Inicializar quando a página carregar
    document.addEventListener('DOMContentLoaded', function() {
      criarEstrelas();
      
      // Configurar contador de caracteres
      const textarea = document.getElementById('pergunta');
      if (textarea) {
        textarea.addEventListener('input', atualizarContador);
        atualizarContador(); // Atualizar contador inicial
      }
    });

    window.addEventListener('resize', criarEstrelas);

    async function gerarPrompt() {
      const botao = document.getElementById('botaoGerar');
      const form = document.getElementById('formulario');
      const carregando = document.getElementById('carregando');

      // Ativar efeito de brilho nas estrelas
      brilharEstrelas();

      botao.disabled = true;
      form.style.opacity = '0.5';
      form.style.pointerEvents = 'none';
      carregando.style.display = 'block';

      const baralho = document.querySelector('input[name="baralho"]:checked').value;
      const leitura = document.getElementById('tipoLeitura').value;
      const objetivo = document.querySelector('input[name="objetivo"]:checked').value;
      const pergunta = document.getElementById('pergunta').value.trim();

      if (!pergunta) {
        alert('Por favor, escreva sua pergunta para o universo.');
        botao.disabled = false;
        form.style.opacity = '1';
        form.style.pointerEvents = 'auto';
        carregando.style.display = 'none';
        return;
      }

      let prompt = `✦ *O universo fala com quem escuta...* ✦\n\n`;
      prompt += `• *Baralho*: ${baralho}\n`;
      prompt += `• *Tipo de Leitura*: ${leitura === 'cruz' ? 'Cruz Celta' : leitura + ' carta(s)'}\n`;
      prompt += `• *Objetivo*: ${objetivo === 'conselho' ? 'Conselho Espiritual' : 'Sim ou Não'}\n`;
      prompt += `• *Pergunta*: "${pergunta}"\n\n`;

      if (objetivo === 'conselho') {
        prompt += `Como uma taróloga experiente, ofereça um conselho profundo baseado no baralho ${baralho}. Seja compassiva e ofereça orientação clara.`;
      } else {
        prompt += `Realize uma tiragem de ${leitura === 'cruz' ? 'Cruz Celta' : leitura + ' carta(s)'} com o baralho ${baralho}. Interprete de forma espiritual e clara, considerando a pergunta feita.`;
      }

      document.cookie = "tarot_prompt=" + encodeURIComponent(prompt) + "; max-age=86400; path=/;";
      location.reload();
    }
  </script>
</body>
</html>